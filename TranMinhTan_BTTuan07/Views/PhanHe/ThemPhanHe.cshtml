@model TranMinhTan_BTTuan07.Models.MB_PhanHe

@{
    ViewBag.Title = "ThemPhanHe";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


<link href="~/Content/bootstrap/css/CSS-PhanHe.css" rel="stylesheet" />
<style>
    form.submitted :invalid {
        border: 1px solid red;
    }
</style>
<div class="">
    <div class="css-inp">
        <i class="fa-solid fa-angles-right"></i>
        <span style="margin-left:1%">THÊM PHÂN HỆ</span>
    </div>
    <div style="padding-bottom: 1%; padding-top: 1%;">
        @Html.ActionLink("< BACK", "Index", null, new { @class = "css-back" })
    </div>
    @using (Html.BeginForm("XuLyThemPhanHe", "PhanHe", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div style=" box-shadow: rgb(0 0 0 / 35%) 0px 5px 15px;">
            <table class="table table-striped">
                <tr>
                    <td style="font-weight: 700;">
                        Id
                    </td>
                    <td >
                        <input type="number" name="Id" min="@ViewBag.min" required class="form-control" />
                        @*@Html.TextBoxFor(model => model.Id, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Id)*@
                    </td>
                    <td style="font-weight: 700;">
                        Mã Phân Hệ
                    </td>
                    <td >
                        @Html.TextBoxFor(model => model.MaPhanHe, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.MaPhanHe)
                    </td>
                </tr>
                <tr>
                    <td style="font-weight: 700;">
                        Tên Phân Hệ
                    </td>
                    <td >
                        @Html.TextBoxFor(model => model.TenPhanHe, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.TenPhanHe)
                    </td>
                    <td style="font-weight: 700;">
                        Hiển thị
                    </td>
                    <td >
                        @Html.RadioButtonFor(model => model.IsHienThi, "true", new { @required = "required" }) Yes
                        @Html.RadioButtonFor(model => model.IsHienThi, "false", new { @required = "required" }) No
                    </td>
                </tr>
                <tr>
                    <td style="font-weight: 700;">
                        Ghi chú
                    </td>
                    <td colspan="3">
                        @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GhiChu)
                    </td>
                </tr>
                <tr>
                    <td colspan="3">
                        <input type="submit" id="submit1" value="Thêm" class="btn btn-danger " />
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
<script>
    document.getElementById("submit1").addEventListener("click", function () {
        document.getElementById("form1").className = "submitted";
    });
</script>


@if (TempData["AlertMessageKTMa"] != null)
{
    <script type="text/javascript" charset="utf-8">
        var msg = '@TempData["AlertMessageKTMa"]'
        console.log(msg);
        swal("Warning!", msg, "warning");
    </script>

}